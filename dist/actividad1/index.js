const d="/api/swapi",l=async o=>{try{const n=await fetch(`${d}/people/${o}/`);if(!n.ok)throw new Error(`Error ${n.status}: ${n.statusText}`);const e=await n.json();return{tipo:"Personaje",nombre:e.name,datos:{Altura:e.height!=="unknown"?`${e.height} cm`:"Desconocido",Peso:e.mass!=="unknown"?`${e.mass} kg`:"Desconocido","Color de cabello":e.hair_color!=="unknown"?e.hair_color:"Desconocido","Color de ojos":e.eye_color!=="unknown"?e.eye_color:"Desconocido","Año de nacimiento":e.birth_year!=="unknown"?e.birth_year:"Desconocido",Género:e.gender!=="unknown"?e.gender:"Desconocido"},enlace:e.url}}catch(n){return console.error("Error al buscar persona:",n),{tipo:"Personaje",nombre:"No encontrado",datos:{Error:"No se pudo cargar la información del personaje"},enlace:null}}},u="/api/swapi",m=async o=>{try{const n=await fetch(`${u}/planets/${o}/`);if(!n.ok)throw new Error(`Error ${n.status}: ${n.statusText}`);const e=await n.json();return{tipo:"Planeta",nombre:e.name,datos:{"Período de rotación":e.rotation_period!=="unknown"?`${e.rotation_period} horas`:"Desconocido","Período orbital":e.orbital_period!=="unknown"?`${e.orbital_period} días`:"Desconocido",Diámetro:e.diameter!=="unknown"?`${e.diameter} km`:"Desconocido",Clima:e.climate!=="unknown"?e.climate:"Desconocido",Gravedad:e.gravity!=="unknown"?e.gravity:"Desconocido",Terreno:e.terrain!=="unknown"?e.terrain:"Desconocido",Población:e.population!=="unknown"?e.population:"Desconocido"},enlace:e.url}}catch(n){return console.error("Error al buscar planeta:",n),{tipo:"Planeta",nombre:"No encontrado",datos:{Error:"No se pudo cargar la información del planeta"},enlace:null}}},p="/api/swapi",h=async o=>{try{const n=await fetch(`${p}/starships/${o}/`);if(!n.ok)throw new Error(`Error ${n.status}: ${n.statusText}`);const e=await n.json();return{tipo:"Nave Espacial",nombre:e.name,datos:{Modelo:e.model!=="unknown"?e.model:"Desconocido",Fabricante:e.manufacturer!=="unknown"?e.manufacturer:"Desconocido",Longitud:e.length!=="unknown"?`${e.length} m`:"Desconocido","Velocidad máxima":e.max_atmosphering_speed!=="unknown"?`${e.max_atmosphering_speed} km/h`:"Desconocido",Tripulación:e.crew!=="unknown"?e.crew:"Desconocido",Pasajeros:e.passengers!=="unknown"?e.passengers:"Desconocido","Clase de nave":e.starship_class!=="unknown"?e.starship_class:"Desconocido",Costo:e.cost_in_credits!=="unknown"?`${e.cost_in_credits} créditos`:"Desconocido"},enlace:e.url}}catch(n){return console.error("Error al buscar nave:",n),{tipo:"Nave Espacial",nombre:"No encontrada",datos:{Error:"No se pudo cargar la información de la nave"},enlace:null}}},E={mostrar(o,n,e,a){a.innerHTML="";const r=document.createElement("div");r.className="columnas-resultados",r.appendChild(this.crearColumna(o)),r.appendChild(this.crearColumna(n)),r.appendChild(this.crearColumna(e)),a.appendChild(r)},crearColumna(o){const n=document.createElement("div");n.className="columna";const e=document.createElement("h3");e.textContent=o.tipo,e.className="tipo-titulo";const a=document.createElement("h4");a.textContent=o.nombre,a.className="nombre-elemento";const r=document.createElement("ul");if(r.className="lista-datos",Object.entries(o.datos).forEach(([t,i])=>{const s=document.createElement("li");s.innerHTML=`<strong>${t}:</strong> ${i}`,r.appendChild(s)}),n.appendChild(e),n.appendChild(a),n.appendChild(r),o.enlace){const t=document.createElement("a");t.href=o.enlace,t.textContent="Ver detalles en API",t.target="_blank",t.className="enlace-api",n.appendChild(t)}return n}},c={mostrarError(o){const n=document.getElementById("resultados");n&&(n.innerHTML=`
            <div class="error-container">
                <div class="error-icon">⚠️</div>
                <h3>Error</h3>
                <p>${o}</p>
                <p class="error-subtitle">Intenta con un número diferente o verifica tu conexión a internet.</p>
            </div>
        `,setTimeout(()=>{n.innerHTML.includes("error-container")&&(n.innerHTML="")},5e3))},mostrarAdvertencia(o){const n=document.createElement("div");n.className="advertencia",n.innerHTML=`
            <span class="advertencia-icon">⚠️</span>
            <span>${o}</span>
            <button class="cerrar-advertencia">&times;</button>
        `,document.body.appendChild(n),n.querySelector(".cerrar-advertencia").addEventListener("click",()=>{n.remove()}),setTimeout(()=>{n.parentNode&&n.remove()},3e3)}};class w{constructor(){this.botonBuscar=document.getElementById("buscar"),this.inputNumero=document.getElementById("numero"),this.contenedorResultados=document.getElementById("resultados"),this.inicializar()}inicializar(){this.botonBuscar.addEventListener("click",()=>this.buscarInformacion()),this.inputNumero.addEventListener("keypress",n=>{n.key==="Enter"&&this.buscarInformacion()})}async buscarInformacion(){const n=this.inputNumero.value.trim();if(!n||isNaN(n)||n<1){c.mostrarError("Por favor, introduce un número válido mayor a 0");return}this.mostrarCargando();try{const[e,a,r]=await Promise.all([l(n),m(n),h(n)]);E.mostrar(e,a,r,this.contenedorResultados)}catch(e){c.mostrarError("Error al cargar los datos. Intenta con otro número."),console.error("Error:",e)}}mostrarCargando(){this.contenedorResultados.innerHTML=`
            <div class="loading">
                <p>Cargando información de la galaxia...</p>
                <div class="spinner"></div>
            </div>
        `}}document.addEventListener("DOMContentLoaded",()=>{new w});
